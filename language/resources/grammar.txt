<program>           -> <declaration>* EOF;

<declaration>       -> <varDeclr>
                        | <statement> ;

<varDeclr>          -> "var" IDENTIFIER "::" TYPE ( "=" <expression>? )? ";" ;

<statement>         -> <exprStmt>
                        | <printStmt> ;
                        
<exprStmt>          -> <expression> ";" ;
<printStmt>         -> "print" "(" <expression> ")" ";" ;

<expression>        -> <assignment> ;

<assignment>        -> IDENTIFIER "=" <assignment>
                        | <equality> ;

<equality>          -> <comparison> ( ("!=" | "==") <comparison>)* ;
<comparison>        -> <term> ( (">" | ">=" | "<" | "<=") <term>)* ;
<term>              -> <factor> ( ("+" | "-") <factor>)* ;
<factor>            -> <unary> ( ("/" | "*") <unary>)* ;
<unary>             -> ("!" | "-") <unary>
                        | <primary> ;
<primary>           -> NUMBER | STRING | "true" | "false" | "none" 
                        | "(" <expression> ")"
                        | IDENTIFIER ;



<grouping>      -> "(" expression ")" ;

<unary>         -> ( "-" | "!" ) expression;

<binary>        -> <expression> <operator> <expression> ;

<operator>      -> "==" | "!=" | "+" | "-" | "*" | "/" ;

NUMBER          -> ("1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")
                    | ("0" | ""1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")*
                    
STRING          -> " | (CHARACTER)* | "

